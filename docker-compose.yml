version: "3.5"
services:
  portal:
    image: ${PORTAL_TAG}
    volumes:
      - ./conf/uwsgi/uwsgi.ini:/project/uwsgi.ini
      - /var/www/chameleon/static:/static
      - /var/www/chameleon/media:/media
    env_file:
      - ./conf/portal/.chameleon_env
    command: ["uwsgi", "--ini", "uwsgi.ini"]
    container_name: portal
    restart: always
    depends_on:
      - nginx
    networks:
      - app
  nginx:
    image: nginx
    volumes:
      - /etc/ssl/certs/chameleon.bundle.crt:/etc/ssl/certs/portal.cer
      - /etc/ssl/certs/www.chameleoncloud.org.key:/etc/ssl/private/portal.key
      - /etc/ssl/certs/api.chameleon.bundle.crt:/etc/ssl/certs/api.portal.cer
      - /etc/ssl/certs/api.chameleoncloud.org.key:/etc/ssl/api.chameleoncloud.org.key
      - /etc/ssl/dhparams.pem:/etc/ssl/dhparam.pem
      - /var/www/chameleon/static:/static
      - /var/www/chameleon/media:/media
      - ./conf/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./conf/nginx/conf.d:/etc/nginx/conf.d
    ports:
      - 80:80
      - 443:443
    container_name: nginx
    restart: always
    networks:
      - app
  referenceapi:
    image: ${REFERENCEAPI_TAG}
    container_name: referenceapi
    restart: always
    depends_on:
      - nginx
    networks:
      - app
  memcached:
    image: memcached:latest
    command: ["-m", "512m"]
    container_name: memcached
    restart: always
    networks:
      - app
  redis:
    image: "redis:alpine"
    restart: always
    ports:
      - '127.0.0.1:6379:6379'
    networks:
      - app
  celery:
    image: ${PORTAL_TAG}
    command: celery -A chameleon worker -l INFO --concurrency=1 -B
    env_file:
      - ./conf/portal/.chameleon_env
    depends_on:
      - redis
    networks:
      - app
networks:
  app:
    external: true
    name: chameleon_default
